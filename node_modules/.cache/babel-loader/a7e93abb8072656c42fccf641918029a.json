{"ast":null,"code":"import*as THREE from'three';import React,{useRef,useEffect,useMemo}from'react';import{extend,useThree,useFrame}from'react-three-fiber';import{EffectComposer}from'three/examples/jsm/postprocessing/EffectComposer';import{ShaderPass}from'three/examples/jsm/postprocessing/ShaderPass';import{RenderPass}from'three/examples/jsm/postprocessing/RenderPass';import{SSAOPass}from'three/examples/jsm/postprocessing/SSAOPass';import{UnrealBloomPass}from'three/examples/jsm/postprocessing/UnrealBloomPass';import{FXAAShader}from'three/examples/jsm/shaders/FXAAShader';extend({EffectComposer:EffectComposer,ShaderPass:ShaderPass,RenderPass:RenderPass,SSAOPass:SSAOPass,UnrealBloomPass:UnrealBloomPass});export default function Effects(){var composer=useRef();var _useThree=useThree(),scene=_useThree.scene,gl=_useThree.gl,size=_useThree.size,camera=_useThree.camera;var aspect=useMemo(function(){return new THREE.Vector2(size.width,size.height);},[size]);useEffect(function(){return void composer.current.setSize(size.width,size.height);},[size]);useFrame(function(){return composer.current.render();},2);return/*#__PURE__*/React.createElement(\"effectComposer\",{ref:composer,args:[gl]},/*#__PURE__*/React.createElement(\"renderPass\",{attachArray:\"passes\",scene:scene,camera:camera}),/*#__PURE__*/React.createElement(\"sSAOPass\",{attachArray:\"passes\",args:[scene,camera],kernelRadius:0.6,maxDistance:0.03}),/*#__PURE__*/React.createElement(\"unrealBloomPass\",{attachArray:\"passes\",args:[aspect,2,1,0.991]}),/*#__PURE__*/React.createElement(\"shaderPass\",{attachArray:\"passes\",args:[FXAAShader],\"material-uniforms-resolution-value\":[1/size.width,1/size.height],renderToScreen:true}));}","map":{"version":3,"sources":["/Users/dc7/Desktop/SS/src/views/Effects.js"],"names":["THREE","React","useRef","useEffect","useMemo","extend","useThree","useFrame","EffectComposer","ShaderPass","RenderPass","SSAOPass","UnrealBloomPass","FXAAShader","Effects","composer","scene","gl","size","camera","aspect","Vector2","width","height","current","setSize","render"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,SAAxB,CAAmCC,OAAnC,KAAkD,OAAlD,CACA,OAASC,MAAT,CAAiBC,QAAjB,CAA2BC,QAA3B,KAA2C,mBAA3C,CACA,OAASC,cAAT,KAA+B,kDAA/B,CACA,OAASC,UAAT,KAA2B,8CAA3B,CACA,OAASC,UAAT,KAA2B,8CAA3B,CACA,OAASC,QAAT,KAAyB,4CAAzB,CACA,OAASC,eAAT,KAAgC,mDAAhC,CACA,OAASC,UAAT,KAA2B,uCAA3B,CAEAR,MAAM,CAAC,CAAEG,cAAc,CAAdA,cAAF,CAAkBC,UAAU,CAAVA,UAAlB,CAA8BC,UAAU,CAAVA,UAA9B,CAA0CC,QAAQ,CAARA,QAA1C,CAAoDC,eAAe,CAAfA,eAApD,CAAD,CAAN,CAEA,cAAe,SAASE,CAAAA,OAAT,EAAmB,CAChC,GAAMC,CAAAA,QAAQ,CAAGb,MAAM,EAAvB,CADgC,cAEII,QAAQ,EAFZ,CAExBU,KAFwB,WAExBA,KAFwB,CAEjBC,EAFiB,WAEjBA,EAFiB,CAEbC,IAFa,WAEbA,IAFa,CAEPC,MAFO,WAEPA,MAFO,CAGhC,GAAMC,CAAAA,MAAM,CAAGhB,OAAO,CAAC,iBAAM,IAAIJ,CAAAA,KAAK,CAACqB,OAAV,CAAkBH,IAAI,CAACI,KAAvB,CAA8BJ,IAAI,CAACK,MAAnC,CAAN,EAAD,CAAmD,CAACL,IAAD,CAAnD,CAAtB,CACAf,SAAS,CAAC,iBAAM,KAAKY,CAAAA,QAAQ,CAACS,OAAT,CAAiBC,OAAjB,CAAyBP,IAAI,CAACI,KAA9B,CAAqCJ,IAAI,CAACK,MAA1C,CAAX,EAAD,CAA+D,CAACL,IAAD,CAA/D,CAAT,CACAX,QAAQ,CAAC,iBAAMQ,CAAAA,QAAQ,CAACS,OAAT,CAAiBE,MAAjB,EAAN,EAAD,CAAkC,CAAlC,CAAR,CACA,mBACE,sCAAgB,GAAG,CAAEX,QAArB,CAA+B,IAAI,CAAE,CAACE,EAAD,CAArC,eACE,kCAAY,WAAW,CAAC,QAAxB,CAAiC,KAAK,CAAED,KAAxC,CAA+C,MAAM,CAAEG,MAAvD,EADF,cAEE,gCAAU,WAAW,CAAC,QAAtB,CAA+B,IAAI,CAAE,CAACH,KAAD,CAAQG,MAAR,CAArC,CAAsD,YAAY,CAAE,GAApE,CAAyE,WAAW,CAAE,IAAtF,EAFF,cAGE,uCAAiB,WAAW,CAAC,QAA7B,CAAsC,IAAI,CAAE,CAACC,MAAD,CAAS,CAAT,CAAY,CAAZ,CAAe,KAAf,CAA5C,EAHF,cAIE,kCACE,WAAW,CAAC,QADd,CAEE,IAAI,CAAE,CAACP,UAAD,CAFR,CAGE,qCAAoC,CAAC,EAAIK,IAAI,CAACI,KAAV,CAAiB,EAAIJ,IAAI,CAACK,MAA1B,CAHtC,CAIE,cAAc,KAJhB,EAJF,CADF,CAaD","sourcesContent":["import * as THREE from 'three'\nimport React, { useRef, useEffect, useMemo } from 'react'\nimport { extend, useThree, useFrame } from 'react-three-fiber'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport { SSAOPass } from 'three/examples/jsm/postprocessing/SSAOPass'\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass'\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader'\n\nextend({ EffectComposer, ShaderPass, RenderPass, SSAOPass, UnrealBloomPass })\n\nexport default function Effects() {\n  const composer = useRef()\n  const { scene, gl, size, camera } = useThree()\n  const aspect = useMemo(() => new THREE.Vector2(size.width, size.height), [size])\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size])\n  useFrame(() => composer.current.render(), 2)\n  return (\n    <effectComposer ref={composer} args={[gl]}>\n      <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\n      <sSAOPass attachArray=\"passes\" args={[scene, camera]} kernelRadius={0.6} maxDistance={0.03} />\n      <unrealBloomPass attachArray=\"passes\" args={[aspect, 2, 1, 0.991]} />\n      <shaderPass\n        attachArray=\"passes\"\n        args={[FXAAShader]}\n        material-uniforms-resolution-value={[1 / size.width, 1 / size.height]}\n        renderToScreen\n      />\n    </effectComposer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}