{"ast":null,"code":"var _jsxFileName = \"/Users/dc7/Desktop/SS/src/views/Sections.js\";\nimport * as THREE from 'three';\nimport ReactDOM from 'react-dom';\nimport React, { useMemo } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport { Physics, usePlane, useBox } from 'use-cannon';\nimport niceColors from 'nice-color-palettes'; // core components\n\nimport WhiteNavbar from \"components/Navbars/WhiteNavbar.js\";\nimport Footer from \"components/Footers/Footer.js\"; // sections for this page\n\nimport Projects from \"./sections-sections/Projects.js\";\nimport Carousel2 from \"./index-sections/Carousel2.js\"; // Makes these prototypes available as \"native\" jsx-string elements\n\nfunction Plane(props) {\n  const [ref] = usePlane(() => ({\n    mass: 0,\n    ...props\n  }));\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: ref,\n    receiveShadow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"planeBufferGeometry\", {\n    attach: \"geometry\",\n    args: [5, 5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"shadowMaterial\", {\n    attach: \"material\",\n    color: \"#171717\",\n    opacity: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Cubes({\n  number\n}) {\n  const [ref, api] = useBox(() => ({\n    mass: 1,\n    args: [0.1, 0.1, 0.1],\n    position: [Math.random() - 0.5, Math.random() * 2, Math.random() - 0.5]\n  }));\n  const colors = useMemo(() => {\n    const array = new Float32Array(number * 3);\n    const color = new THREE.Color();\n\n    for (let i = 0; i < number; i++) color.set(niceColors[17][Math.floor(Math.random() * 5)]).convertSRGBToLinear().toArray(array, i * 3);\n\n    return array;\n  }, [number]);\n  useFrame(() => api.at(Math.floor(Math.random() * number)).position.set(0, Math.random() * 2, 0));\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", {\n    receiveShadow: true,\n    castShadow: true,\n    ref: ref,\n    args: [null, null, number],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: [0.1, 0.1, 0.1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attachObject: ['attributes', 'color'],\n    args: [colors, 3],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"meshLambertMaterial\", {\n    attach: \"material\",\n    vertexColors: THREE.VertexColors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Content() {\n  const [springs, set] = useSprings(number, i => ({\n    from: random(i),\n    ...random(i),\n    config: {\n      mass: 20,\n      tension: 150,\n      friction: 50\n    }\n  }));\n  useEffect(() => void setInterval(() => set(i => ({ ...random(i),\n    delay: i * 40\n  })), 3000), []);\n  return data.map((d, index) => /*#__PURE__*/React.createElement(a.mesh, Object.assign({\n    key: index\n  }, springs[index], {\n    castShadow: true,\n    receiveShadow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: d.args,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(a.meshStandardMaterial, {\n    attach: \"material\",\n    color: springs[index].color,\n    roughness: 0.75,\n    metalness: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  })));\n}\n\nfunction Lights() {\n  return /*#__PURE__*/React.createElement(\"group\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"pointLight\", {\n    intensity: 0.3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"spotLight\", {\n    castShadow: true,\n    intensity: 0.2,\n    angle: Math.PI / 7,\n    position: [150, 150, 250],\n    penumbra: 1,\n    \"shadow-mapSize-width\": 2048,\n    \"shadow-mapSize-height\": 2048,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Boxes() {\n  const [hovered, set] = useState();\n  const colorArray = useMemo(() => Float32Array.from(new Array(1000).fill().flatMap((_, i) => tempColor.set(colors[i]).toArray())), []);\n  const ref = useRef();\n  const previous = useRef();\n  useEffect(() => void (previous.current = hovered), [hovered]);\n  useFrame(state => {\n    const time = state.clock.getElapsedTime();\n    ref.current.rotation.x = Math.sin(time / 4);\n    ref.current.rotation.y = Math.sin(time / 2);\n    let i = 0;\n\n    for (let x = 0; x < 10; x++) for (let y = 0; y < 10; y++) for (let z = 0; z < 10; z++) {\n      const id = i++;\n      tempObject.position.set(5 - x, 5 - y, 5 - z);\n      tempObject.rotation.y = Math.sin(x / 4 + time) + Math.sin(y / 4 + time) + Math.sin(z / 4 + time);\n      tempObject.rotation.z = tempObject.rotation.y * 2;\n\n      if (hovered !== previous.current) {\n        tempColor.set(id === hovered ? 'white' : colors[id]).toArray(colorArray, id * 3);\n        ref.current.geometry.attributes.color.needsUpdate = true;\n      }\n\n      const scale = id === hovered ? 2 : 1;\n      tempObject.scale.set(scale, scale, scale);\n      tempObject.updateMatrix();\n      ref.current.setMatrixAt(id, tempObject.matrix);\n    }\n\n    ref.current.instanceMatrix.needsUpdate = true;\n  });\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", {\n    ref: ref,\n    args: [null, null, 1000],\n    onPointerMove: e => set(e.instanceId),\n    onPointerOut: e => set(undefined),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: [0.7, 0.7, 0.7],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attachObject: ['attributes', 'color'],\n    args: [colorArray, 3],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"meshPhongMaterial\", {\n    attach: \"material\",\n    vertexColors: THREE.VertexColors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Sections() {\n  React.useEffect(() => {\n    document.body.classList.add(\"sections-page\");\n    document.body.classList.add(\"sidebar-collapse\");\n    document.documentElement.classList.remove(\"nav-open\");\n    var href = window.location.href.substring(window.location.href.lastIndexOf(\"#/\") + 2);\n    var hrefId = href.substring(href.lastIndexOf(\"#\") + 1);\n\n    if (href.lastIndexOf(\"#\") > 0) {\n      document.getElementById(hrefId).scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\",\n        inline: \"nearest\"\n      });\n    }\n\n    return function cleanup() {\n      document.body.classList.remove(\"sections-page\");\n      document.body.classList.remove(\"sidebar-collapse\");\n    };\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(WhiteNavbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section-space\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Projects, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Carousel2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Sections;","map":{"version":3,"sources":["/Users/dc7/Desktop/SS/src/views/Sections.js"],"names":["THREE","ReactDOM","React","useMemo","Canvas","useFrame","Physics","usePlane","useBox","niceColors","WhiteNavbar","Footer","Projects","Carousel2","Plane","props","ref","mass","Cubes","number","api","args","position","Math","random","colors","array","Float32Array","color","Color","i","set","floor","convertSRGBToLinear","toArray","at","VertexColors","Content","springs","useSprings","from","config","tension","friction","useEffect","setInterval","delay","data","map","d","index","Lights","PI","Boxes","hovered","useState","colorArray","Array","fill","flatMap","_","tempColor","useRef","previous","current","state","time","clock","getElapsedTime","rotation","x","sin","y","z","id","tempObject","geometry","attributes","needsUpdate","scale","updateMatrix","setMatrixAt","matrix","instanceMatrix","e","instanceId","undefined","Sections","document","body","classList","add","documentElement","remove","href","window","location","substring","lastIndexOf","hrefId","getElementById","scrollIntoView","behavior","block","inline","cleanup"],"mappings":"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","sourcesContent":["import * as THREE from 'three'\nimport ReactDOM from 'react-dom'\nimport React, { useMemo } from 'react'\nimport { Canvas, useFrame } from 'react-three-fiber'\nimport { Physics, usePlane, useBox } from 'use-cannon'\nimport niceColors from 'nice-color-palettes'\n\n// core components\nimport WhiteNavbar from \"components/Navbars/WhiteNavbar.js\";\nimport Footer from \"components/Footers/Footer.js\";\n\n// sections for this page\n\nimport Projects from \"./sections-sections/Projects.js\";\nimport Carousel2 from \"./index-sections/Carousel2.js\";\n\n// Makes these prototypes available as \"native\" jsx-string elements\n\nfunction Plane(props) {\n  const [ref] = usePlane(() => ({ mass: 0, ...props }))\n  return (\n    <mesh ref={ref} receiveShadow>\n      <planeBufferGeometry attach=\"geometry\" args={[5, 5]} />\n      <shadowMaterial attach=\"material\" color=\"#171717\" opacity={0.5} />\n    </mesh>\n  )\n}\n\nfunction Cubes({ number }) {\n  const [ref, api] = useBox(() => ({\n    mass: 1,\n    args: [0.1, 0.1, 0.1],\n    position: [Math.random() - 0.5, Math.random() * 2, Math.random() - 0.5]\n  }))\n\n  const colors = useMemo(() => {\n    const array = new Float32Array(number * 3)\n    const color = new THREE.Color()\n    for (let i = 0; i < number; i++)\n      color\n        .set(niceColors[17][Math.floor(Math.random() * 5)])\n        .convertSRGBToLinear()\n        .toArray(array, i * 3)\n    return array\n  }, [number])\n\n  useFrame(() => api.at(Math.floor(Math.random() * number)).position.set(0, Math.random() * 2, 0))\n\n  return (\n    <instancedMesh receiveShadow castShadow ref={ref} args={[null, null, number]}>\n      <boxBufferGeometry attach=\"geometry\" args={[0.1, 0.1, 0.1]}>\n        <instancedBufferAttribute attachObject={['attributes', 'color']} args={[colors, 3]} />\n      </boxBufferGeometry>\n      <meshLambertMaterial attach=\"material\" vertexColors={THREE.VertexColors} />\n    </instancedMesh>\n  )\n}\nfunction Content() {\n  const [springs, set] = useSprings(number, i => ({\n    from: random(i),\n    ...random(i),\n    config: { mass: 20, tension: 150, friction: 50 }\n  }))\n  useEffect(() => void setInterval(() => set(i => ({ ...random(i), delay: i * 40 })), 3000), [])\n  return data.map((d, index) => (\n    <a.mesh key={index} {...springs[index]} castShadow receiveShadow>\n      <boxBufferGeometry attach=\"geometry\" args={d.args} />\n      <a.meshStandardMaterial attach=\"material\" color={springs[index].color} roughness={0.75} metalness={0.5} />\n    </a.mesh>\n  ))\n}\n\nfunction Lights() {\n  return (\n    <group>\n      <pointLight intensity={0.3} />\n      <ambientLight intensity={2} />\n      <spotLight\n        castShadow\n        intensity={0.2}\n        angle={Math.PI / 7}\n        position={[150, 150, 250]}\n        penumbra={1}\n        shadow-mapSize-width={2048}\n        shadow-mapSize-height={2048}\n      />\n    </group>\n  )\n}\n\n\nfunction Boxes() {\n  const [hovered, set] = useState()\n  const colorArray = useMemo(() => Float32Array.from(new Array(1000).fill().flatMap((_, i) => tempColor.set(colors[i]).toArray())), [])\n\n  const ref = useRef()\n  const previous = useRef()\n  useEffect(() => void (previous.current = hovered), [hovered])\n\n  useFrame(state => {\n    const time = state.clock.getElapsedTime()\n    ref.current.rotation.x = Math.sin(time / 4)\n    ref.current.rotation.y = Math.sin(time / 2)\n    let i = 0\n    for (let x = 0; x < 10; x++)\n      for (let y = 0; y < 10; y++)\n        for (let z = 0; z < 10; z++) {\n          const id = i++\n          tempObject.position.set(5 - x, 5 - y, 5 - z)\n          tempObject.rotation.y = Math.sin(x / 4 + time) + Math.sin(y / 4 + time) + Math.sin(z / 4 + time)\n          tempObject.rotation.z = tempObject.rotation.y * 2\n          if (hovered !== previous.current) {\n            tempColor.set(id === hovered ? 'white' : colors[id]).toArray(colorArray, id * 3)\n            ref.current.geometry.attributes.color.needsUpdate = true\n          }\n          const scale = id === hovered ? 2 : 1\n          tempObject.scale.set(scale, scale, scale)\n          tempObject.updateMatrix()\n          ref.current.setMatrixAt(id, tempObject.matrix)\n        }\n    ref.current.instanceMatrix.needsUpdate = true\n  })\n\n  return (\n    <instancedMesh ref={ref} args={[null, null, 1000]} onPointerMove={e => set(e.instanceId)} onPointerOut={e => set(undefined)}>\n      <boxBufferGeometry attach=\"geometry\" args={[0.7, 0.7, 0.7]}>\n        <instancedBufferAttribute attachObject={['attributes', 'color']} args={[colorArray, 3]} />\n      </boxBufferGeometry>\n      <meshPhongMaterial attach=\"material\" vertexColors={THREE.VertexColors} />\n    </instancedMesh>\n\n  )\n}\n\nfunction Sections() {\n\n  React.useEffect(() => {\n    document.body.classList.add(\"sections-page\");\n    document.body.classList.add(\"sidebar-collapse\");\n    document.documentElement.classList.remove(\"nav-open\");\n    var href = window.location.href.substring(\n      window.location.href.lastIndexOf(\"#/\") + 2\n    );\n    var hrefId = href.substring(href.lastIndexOf(\"#\") + 1);\n    if (href.lastIndexOf(\"#\") > 0) {\n      document.getElementById(hrefId).scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\",\n        inline: \"nearest\",\n      });\n    }\n    return function cleanup() {\n      document.body.classList.remove(\"sections-page\");\n      document.body.classList.remove(\"sidebar-collapse\");\n    };\n  });\n\n  return (\n    <>\n      <WhiteNavbar />\n      <div className=\"wrapper\">\n        <div className=\"section-space\"></div>\n\n        <Projects />\n\n\n\n\n<Carousel2/>\n        <Footer />\n      </div>\n    </>\n  );\n}\n\nexport default Sections;\n"]},"metadata":{},"sourceType":"module"}