{"ast":null,"code":"var _jsxFileName = \"/Users/dc7/Desktop/SS/src/views/Sections.js\";\n// javascript library that creates a parrallax effect\nimport Rellax from \"rellax\"; // reactstrap components\n\nimport * as THREE from 'three';\nimport React, { Suspense, useCallback, useEffect, useRef, useMemo, useState } from 'react';\nimport niceColors from 'nice-color-palettes';\nimport { Canvas, useFrame, useThree } from 'react-three-fiber';\nimport { CubeTextureLoader, CubeCamera, WebGLCubeRenderTarget, RGBFormat, LinearMipmapLinearFilter } from \"three\";\nimport Effects from 'views/Effects.js';\nimport { Badge, Card, CardBody, CardTitle, Container, Row, Col } from \"reactstrap\"; // core components\n// reactstrap components\n// core components\n\nimport WhiteNavbar from \"components/Navbars/WhiteNavbar.js\";\nimport Footer from \"components/Footers/Footer.js\"; // sections for this page\n\nimport Projects from \"./sections-sections/Projects.js\";\nimport Carousel2 from \"./index-sections/Carousel2.js\"; // Makes these prototypes available as \"native\" jsx-string elements\n\nconst tempObject = new THREE.Object3D();\nconst tempColor = new THREE.Color();\nconst colors = new Array(1000).fill().map(() => niceColors[17][Math.floor(Math.random() * 5)]);\n\nfunction Swarm({\n  count,\n  mouse\n}) {\n  const mesh = useRef();\n  const dummy = useMemo(() => new THREE.Object3D(), []);\n  const particles = useMemo(() => {\n    const temp = [];\n\n    for (let i = 0; i < count; i++) {\n      const t = Math.random() * 100;\n      const factor = 20 + Math.random() * 100;\n      const speed = 0.01 + Math.random() / 200;\n      const xFactor = -20 + Math.random() * 40;\n      const yFactor = -20 + Math.random() * 40;\n      const zFactor = -20 + Math.random() * 40;\n      temp.push({\n        t,\n        factor,\n        speed,\n        xFactor,\n        yFactor,\n        zFactor,\n        mx: 0,\n        my: 0\n      });\n    }\n\n    return temp;\n  }, [count]);\n  useFrame(state => {\n    particles.forEach((particle, i) => {\n      let {\n        t,\n        factor,\n        speed,\n        xFactor,\n        yFactor,\n        zFactor\n      } = particle;\n      t = particle.t += speed / 2;\n      const a = Math.cos(t) + Math.sin(t * 1) / 10;\n      const b = Math.sin(t) + Math.cos(t * 2) / 10;\n      const s = Math.max(1.5, Math.cos(t) * 5);\n      particle.mx += (mouse.current[0] - particle.mx) * 0.02;\n      particle.my += (-mouse.current[1] - particle.my) * 0.02;\n      dummy.position.set(particle.mx / 10 * a + xFactor + Math.cos(t / 10 * factor) + Math.sin(t * 1) * factor / 10, particle.my / 10 * b + yFactor + Math.sin(t / 10 * factor) + Math.cos(t * 2) * factor / 10, particle.my / 10 * b + zFactor + Math.cos(t / 10 * factor) + Math.sin(t * 3) * factor / 10);\n      dummy.scale.set(s, s, s);\n      dummy.updateMatrix();\n      mesh.current.setMatrixAt(i, dummy.matrix);\n    });\n    mesh.current.instanceMatrix.needsUpdate = true;\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"instancedMesh\", {\n    ref: mesh,\n    args: [null, null, count],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"sphereBufferGeometry\", {\n    attach: \"geometry\",\n    args: [1, 32, 32],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"meshPhongMaterial\", {\n    attach: \"material\",\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction Boxes() {\n  const [hovered, set] = useState();\n  const colorArray = useMemo(() => Float32Array.from(new Array(1000).fill().flatMap((_, i) => tempColor.set(colors[i]).toArray())), []);\n  const ref = useRef();\n  const previous = useRef();\n  useEffect(() => void (previous.current = hovered), [hovered]);\n  useFrame(state => {\n    const time = state.clock.getElapsedTime();\n    ref.current.rotation.x = Math.sin(time / 4);\n    ref.current.rotation.y = Math.sin(time / 2);\n    let i = 0;\n\n    for (let x = 0; x < 10; x++) for (let y = 0; y < 10; y++) for (let z = 0; z < 10; z++) {\n      const id = i++;\n      tempObject.position.set(5 - x, 5 - y, 5 - z);\n      tempObject.rotation.y = Math.sin(x / 4 + time) + Math.sin(y / 4 + time) + Math.sin(z / 4 + time);\n      tempObject.rotation.z = tempObject.rotation.y * 2;\n\n      if (hovered !== previous.current) {\n        tempColor.set(id === hovered ? 'white' : colors[id]).toArray(colorArray, id * 3);\n        ref.current.geometry.attributes.color.needsUpdate = true;\n      }\n\n      const scale = id === hovered ? 2 : 1;\n      tempObject.scale.set(scale, scale, scale);\n      tempObject.updateMatrix();\n      ref.current.setMatrixAt(id, tempObject.matrix);\n    }\n\n    ref.current.instanceMatrix.needsUpdate = true;\n  });\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", {\n    ref: ref,\n    args: [null, null, 1000],\n    onPointerMove: e => set(e.instanceId),\n    onPointerOut: e => set(undefined),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: [0.7, 0.7, 0.7],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attachObject: ['attributes', 'color'],\n    args: [colorArray, 3],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"meshPhongMaterial\", {\n    attach: \"material\",\n    vertexColors: THREE.VertexColors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Sections() {\n  React.useEffect(() => {\n    document.body.classList.add(\"sections-page\");\n    document.body.classList.add(\"sidebar-collapse\");\n    document.documentElement.classList.remove(\"nav-open\");\n    var href = window.location.href.substring(window.location.href.lastIndexOf(\"#/\") + 2);\n    var hrefId = href.substring(href.lastIndexOf(\"#\") + 1);\n\n    if (href.lastIndexOf(\"#\") > 0) {\n      document.getElementById(hrefId).scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\",\n        inline: \"nearest\"\n      });\n    }\n\n    return function cleanup() {\n      document.body.classList.remove(\"sections-page\");\n      document.body.classList.remove(\"sidebar-collapse\");\n    };\n  });\n  const onMouseMove = useCallback(({\n    clientX: x,\n    clientY: y\n  }) => mouse.current = [x - window.innerWidth / 2, y - window.innerHeight / 2], []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(WhiteNavbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section-space\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Projects, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    onMouseMove: onMouseMove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Canvas, {\n    gl: {\n      alpha: false,\n      antialias: false,\n      logarithmicDepthBuffer: true\n    },\n    camera: {\n      fov: 75,\n      position: [0, 0, 70]\n    },\n    onCreated: ({\n      gl\n    }) => {\n      gl.setClearColor('white');\n      gl.toneMapping = THREE.ACESFilmicToneMapping;\n      gl.outputEncoding = THREE.sRGBEncoding;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [100, 100, 100],\n    intensity: 2.2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [-100, -100, -100],\n    intensity: 5,\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Swarm, {\n    mouse: useRef([0, 0]),\n    count: 150,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Effects, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"projects-4\",\n    \"data-background-color\": \"gray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Carousel2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 1\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Sections;","map":{"version":3,"sources":["/Users/dc7/Desktop/SS/src/views/Sections.js"],"names":["Rellax","THREE","React","Suspense","useCallback","useEffect","useRef","useMemo","useState","niceColors","Canvas","useFrame","useThree","CubeTextureLoader","CubeCamera","WebGLCubeRenderTarget","RGBFormat","LinearMipmapLinearFilter","Effects","Badge","Card","CardBody","CardTitle","Container","Row","Col","WhiteNavbar","Footer","Projects","Carousel2","tempObject","Object3D","tempColor","Color","colors","Array","fill","map","Math","floor","random","Swarm","count","mouse","mesh","dummy","particles","temp","i","t","factor","speed","xFactor","yFactor","zFactor","push","mx","my","state","forEach","particle","a","cos","sin","b","s","max","current","position","set","scale","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate","Boxes","hovered","colorArray","Float32Array","from","flatMap","_","toArray","ref","previous","time","clock","getElapsedTime","rotation","x","y","z","id","geometry","attributes","color","e","instanceId","undefined","VertexColors","Sections","document","body","classList","add","documentElement","remove","href","window","location","substring","lastIndexOf","hrefId","getElementById","scrollIntoView","behavior","block","inline","cleanup","onMouseMove","clientX","clientY","innerWidth","innerHeight","width","height","alpha","antialias","logarithmicDepthBuffer","fov","gl","setClearColor","toneMapping","ACESFilmicToneMapping","outputEncoding","sRGBEncoding"],"mappings":"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","sourcesContent":["// javascript library that creates a parrallax effect\nimport Rellax from \"rellax\";\n// reactstrap components\nimport * as THREE from 'three';\nimport React, { Suspense, useCallback, useEffect, useRef, useMemo, useState } from 'react';\nimport niceColors from 'nice-color-palettes';\n\nimport { Canvas, useFrame, useThree } from 'react-three-fiber';\nimport {\n  CubeTextureLoader,\n  CubeCamera,\n  WebGLCubeRenderTarget,\n  RGBFormat,\n  LinearMipmapLinearFilter,\n} from \"three\";\nimport Effects from 'views/Effects.js';\nimport {\n  Badge,\n  Card,\n  CardBody,\n  CardTitle,\n\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";// core components\n// reactstrap components\n\n// core components\nimport WhiteNavbar from \"components/Navbars/WhiteNavbar.js\";\nimport Footer from \"components/Footers/Footer.js\";\n\n// sections for this page\n\nimport Projects from \"./sections-sections/Projects.js\";\nimport Carousel2 from \"./index-sections/Carousel2.js\";\n\n// Makes these prototypes available as \"native\" jsx-string elements\nconst tempObject = new THREE.Object3D()\nconst tempColor = new THREE.Color()\nconst colors = new Array(1000).fill().map(() => niceColors[17][Math.floor(Math.random() * 5)])\n\n\nfunction Swarm({ count, mouse }) {\n  const mesh = useRef()\n  const dummy = useMemo(() => new THREE.Object3D(), [])\n\n  const particles = useMemo(() => {\n    const temp = []\n    for (let i = 0; i < count; i++) {\n      const t = Math.random() * 100\n      const factor = 20 + Math.random() * 100\n      const speed = 0.01 + Math.random() / 200\n      const xFactor = -20 + Math.random() * 40\n      const yFactor = -20 + Math.random() * 40\n      const zFactor = -20 + Math.random() * 40\n      temp.push({ t, factor, speed, xFactor, yFactor, zFactor, mx: 0, my: 0 })\n    }\n    return temp\n  }, [count])\n\n  useFrame((state) => {\n    particles.forEach((particle, i) => {\n      let { t, factor, speed, xFactor, yFactor, zFactor } = particle\n      t = particle.t += speed / 2\n      const a = Math.cos(t) + Math.sin(t * 1) / 10\n      const b = Math.sin(t) + Math.cos(t * 2) / 10\n      const s = Math.max(1.5, Math.cos(t) * 5)\n      particle.mx += (mouse.current[0] - particle.mx) * 0.02\n      particle.my += (-mouse.current[1] - particle.my) * 0.02\n      dummy.position.set(\n        (particle.mx / 10) * a + xFactor + Math.cos((t / 10) * factor) + (Math.sin(t * 1) * factor) / 10,\n        (particle.my / 10) * b + yFactor + Math.sin((t / 10) * factor) + (Math.cos(t * 2) * factor) / 10,\n        (particle.my / 10) * b + zFactor + Math.cos((t / 10) * factor) + (Math.sin(t * 3) * factor) / 10\n      )\n      dummy.scale.set(s, s, s)\n      dummy.updateMatrix()\n      mesh.current.setMatrixAt(i, dummy.matrix)\n    })\n    mesh.current.instanceMatrix.needsUpdate = true\n  })\n\n  return (\n    <>\n      <instancedMesh ref={mesh} args={[null, null, count]}>\n        <sphereBufferGeometry attach=\"geometry\" args={[1, 32, 32]} />\n        <meshPhongMaterial attach=\"material\" color=\"white\" />\n      </instancedMesh>\n    </>\n  )\n}\n\nfunction Boxes() {\n  const [hovered, set] = useState()\n  const colorArray = useMemo(() => Float32Array.from(new Array(1000).fill().flatMap((_, i) => tempColor.set(colors[i]).toArray())), [])\n\n  const ref = useRef()\n  const previous = useRef()\n  useEffect(() => void (previous.current = hovered), [hovered])\n\n  useFrame(state => {\n    const time = state.clock.getElapsedTime()\n    ref.current.rotation.x = Math.sin(time / 4)\n    ref.current.rotation.y = Math.sin(time / 2)\n    let i = 0\n    for (let x = 0; x < 10; x++)\n      for (let y = 0; y < 10; y++)\n        for (let z = 0; z < 10; z++) {\n          const id = i++\n          tempObject.position.set(5 - x, 5 - y, 5 - z)\n          tempObject.rotation.y = Math.sin(x / 4 + time) + Math.sin(y / 4 + time) + Math.sin(z / 4 + time)\n          tempObject.rotation.z = tempObject.rotation.y * 2\n          if (hovered !== previous.current) {\n            tempColor.set(id === hovered ? 'white' : colors[id]).toArray(colorArray, id * 3)\n            ref.current.geometry.attributes.color.needsUpdate = true\n          }\n          const scale = id === hovered ? 2 : 1\n          tempObject.scale.set(scale, scale, scale)\n          tempObject.updateMatrix()\n          ref.current.setMatrixAt(id, tempObject.matrix)\n        }\n    ref.current.instanceMatrix.needsUpdate = true\n  })\n\n  return (\n    <instancedMesh ref={ref} args={[null, null, 1000]} onPointerMove={e => set(e.instanceId)} onPointerOut={e => set(undefined)}>\n      <boxBufferGeometry attach=\"geometry\" args={[0.7, 0.7, 0.7]}>\n        <instancedBufferAttribute attachObject={['attributes', 'color']} args={[colorArray, 3]} />\n      </boxBufferGeometry>\n      <meshPhongMaterial attach=\"material\" vertexColors={THREE.VertexColors} />\n    </instancedMesh>\n\n  )\n}\n\nfunction Sections() {\n\n  React.useEffect(() => {\n    document.body.classList.add(\"sections-page\");\n    document.body.classList.add(\"sidebar-collapse\");\n    document.documentElement.classList.remove(\"nav-open\");\n    var href = window.location.href.substring(\n      window.location.href.lastIndexOf(\"#/\") + 2\n    );\n    var hrefId = href.substring(href.lastIndexOf(\"#\") + 1);\n    if (href.lastIndexOf(\"#\") > 0) {\n      document.getElementById(hrefId).scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\",\n        inline: \"nearest\",\n      });\n    }\n    return function cleanup() {\n      document.body.classList.remove(\"sections-page\");\n      document.body.classList.remove(\"sidebar-collapse\");\n    };\n  });\n const onMouseMove = useCallback(({ clientX: x, clientY: y }) => (mouse.current = [x - window.innerWidth / 2, y - window.innerHeight / 2]), [])\n  return (\n    <>\n      <WhiteNavbar />\n      <div className=\"wrapper\">\n        <div className=\"section-space\"></div>\n\n        <Projects />\n\n        <div style={{ width: '100%', height: '100%' }} onMouseMove={onMouseMove}>\n        <Canvas\n          gl={{ alpha: false, antialias: false, logarithmicDepthBuffer: true }}\n          camera={{ fov: 75, position: [0, 0, 70] }}\n          onCreated={({ gl }) => {\n            gl.setClearColor('white')\n            gl.toneMapping = THREE.ACESFilmicToneMapping\n            gl.outputEncoding = THREE.sRGBEncoding\n          }}>\n          <ambientLight intensity={1} />\n          <pointLight position={[100, 100, 100]} intensity={2.2} />\n          <pointLight position={[-100, -100, -100]} intensity={5} color=\"red\" />\n          <Swarm mouse={useRef([0, 0])} count={150} />\n          <Suspense fallback={null}>\n            <Effects />\n          </Suspense>\n        </Canvas>\n      </div>\n\n          <div className=\"projects-4\" data-background-color=\"gray\">\n\n<Carousel2/>\n</div>\n        <Footer />\n      </div>\n    </>\n  );\n}\n\nexport default Sections;\n"]},"metadata":{},"sourceType":"module"}