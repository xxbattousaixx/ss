{"ast":null,"code":"import { Color } from \"../../../build/three.module.js\";\n/**\n * Luminosity\n * http://en.wikipedia.org/wiki/Luminosity\n */\n\nvar LuminosityHighPassShader = {\n  shaderID: \"luminosityHighPass\",\n  uniforms: {\n    \"tDiffuse\": {\n      value: null\n    },\n    \"luminosityThreshold\": {\n      value: 1.0\n    },\n    \"smoothWidth\": {\n      value: 1.0\n    },\n    \"defaultColor\": {\n      value: new Color(0x000000)\n    },\n    \"defaultOpacity\": {\n      value: 0.0\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform vec3 defaultColor;\", \"uniform float defaultOpacity;\", \"uniform float luminosityThreshold;\", \"uniform float smoothWidth;\", \"varying vec2 vUv;\", \"void main() {\", \"\tvec4 texel = texture2D( tDiffuse, vUv );\", \"\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\", \"\tfloat v = dot( texel.xyz, luma );\", \"\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\", \"\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\", \"\tgl_FragColor = mix( outputColor, texel, alpha );\", \"}\"].join(\"\\n\")\n};\nexport { LuminosityHighPassShader };","map":{"version":3,"sources":["/Users/dc7/Desktop/DAC/ss/node_modules/three/examples/jsm/shaders/LuminosityHighPassShader.js"],"names":["Color","LuminosityHighPassShader","shaderID","uniforms","value","vertexShader","join","fragmentShader"],"mappings":"AAAA,SACCA,KADD,QAEO,gCAFP;AAIA;AACA;AACA;AACA;;AAEA,IAAIC,wBAAwB,GAAG;AAE9BC,EAAAA,QAAQ,EAAE,oBAFoB;AAI9BC,EAAAA,QAAQ,EAAE;AAET,gBAAY;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAFH;AAGT,2BAAuB;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAHd;AAIT,mBAAe;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAJN;AAKT,oBAAgB;AAAEA,MAAAA,KAAK,EAAE,IAAIJ,KAAJ,CAAW,QAAX;AAAT,KALP;AAMT,sBAAkB;AAAEI,MAAAA,KAAK,EAAE;AAAT;AANT,GAJoB;AAc9BC,EAAAA,YAAY,EAAE,CAEb,mBAFa,EAIb,eAJa,EAMb,YANa,EAQb,4EARa,EAUb,GAVa,EAYZC,IAZY,CAYN,IAZM,CAdgB;AA4B9BC,EAAAA,cAAc,EAAE,CAEf,6BAFe,EAGf,4BAHe,EAIf,+BAJe,EAKf,oCALe,EAMf,4BANe,EAQf,mBARe,EAUf,eAVe,EAYf,2CAZe,EAcf,2CAde,EAgBf,oCAhBe,EAkBf,+DAlBe,EAoBf,yFApBe,EAsBf,mDAtBe,EAwBf,GAxBe,EA0BdD,IA1Bc,CA0BR,IA1BQ;AA5Bc,CAA/B;AA0DA,SAASL,wBAAT","sourcesContent":["import {\n\tColor\n} from \"../../../build/three.module.js\";\n\n/**\n * Luminosity\n * http://en.wikipedia.org/wiki/Luminosity\n */\n\nvar LuminosityHighPassShader = {\n\n\tshaderID: \"luminosityHighPass\",\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"luminosityThreshold\": { value: 1.0 },\n\t\t\"smoothWidth\": { value: 1.0 },\n\t\t\"defaultColor\": { value: new Color( 0x000000 ) },\n\t\t\"defaultOpacity\": { value: 0.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvUv = uv;\",\n\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform vec3 defaultColor;\",\n\t\t\"uniform float defaultOpacity;\",\n\t\t\"uniform float luminosityThreshold;\",\n\t\t\"uniform float smoothWidth;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvec4 texel = texture2D( tDiffuse, vUv );\",\n\n\t\t\"\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\",\n\n\t\t\"\tfloat v = dot( texel.xyz, luma );\",\n\n\t\t\"\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\",\n\n\t\t\"\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\",\n\n\t\t\"\tgl_FragColor = mix( outputColor, texel, alpha );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n\nexport { LuminosityHighPassShader };\n"]},"metadata":{},"sourceType":"module"}