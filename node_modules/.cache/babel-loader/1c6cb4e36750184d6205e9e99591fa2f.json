{"ast":null,"code":"var _jsxFileName = \"/Users/dc7/Desktop/DAC/SS/src/views/Effects.js\";\nimport * as THREE from 'three';\nimport React, { useRef, useEffect, useMemo } from 'react';\nimport { extend, useThree, useFrame } from 'react-three-fiber';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { SSAOPass } from 'three/examples/jsm/postprocessing/SSAOPass';\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass';\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader';\nextend({\n  EffectComposer,\n  ShaderPass,\n  RenderPass,\n  SSAOPass,\n  UnrealBloomPass\n});\nexport default function Effects() {\n  const composer = useRef();\n  const {\n    scene,\n    gl,\n    size,\n    camera\n  } = useThree();\n  const aspect = useMemo(() => new THREE.Vector2(size.width, size.height), [size]);\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size]);\n  useFrame(() => composer.current.render(), 2);\n  return /*#__PURE__*/React.createElement(\"effectComposer\", {\n    ref: composer,\n    args: [gl],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"renderPass\", {\n    attachArray: \"passes\",\n    scene: scene,\n    camera: camera,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"sSAOPass\", {\n    attachArray: \"passes\",\n    args: [scene, camera],\n    kernelRadius: 0.6,\n    maxDistance: 0.03,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"unrealBloomPass\", {\n    attachArray: \"passes\",\n    args: [aspect, 2, 1, 0.991],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"shaderPass\", {\n    attachArray: \"passes\",\n    args: [FXAAShader],\n    \"material-uniforms-resolution-value\": [1 / size.width, 1 / size.height],\n    renderToScreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/dc7/Desktop/DAC/SS/src/views/Effects.js"],"names":["THREE","React","useRef","useEffect","useMemo","extend","useThree","useFrame","EffectComposer","ShaderPass","RenderPass","SSAOPass","UnrealBloomPass","FXAAShader","Effects","composer","scene","gl","size","camera","aspect","Vector2","width","height","current","setSize","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,OAAnC,QAAkD,OAAlD;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,QAA3B,QAA2C,mBAA3C;AACA,SAASC,cAAT,QAA+B,kDAA/B;AACA,SAASC,UAAT,QAA2B,8CAA3B;AACA,SAASC,UAAT,QAA2B,8CAA3B;AACA,SAASC,QAAT,QAAyB,4CAAzB;AACA,SAASC,eAAT,QAAgC,mDAAhC;AACA,SAASC,UAAT,QAA2B,uCAA3B;AAEAR,MAAM,CAAC;AAAEG,EAAAA,cAAF;AAAkBC,EAAAA,UAAlB;AAA8BC,EAAAA,UAA9B;AAA0CC,EAAAA,QAA1C;AAAoDC,EAAAA;AAApD,CAAD,CAAN;AAEA,eAAe,SAASE,OAAT,GAAmB;AAChC,QAAMC,QAAQ,GAAGb,MAAM,EAAvB;AACA,QAAM;AAAEc,IAAAA,KAAF;AAASC,IAAAA,EAAT;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA;AAAnB,MAA8Bb,QAAQ,EAA5C;AACA,QAAMc,MAAM,GAAGhB,OAAO,CAAC,MAAM,IAAIJ,KAAK,CAACqB,OAAV,CAAkBH,IAAI,CAACI,KAAvB,EAA8BJ,IAAI,CAACK,MAAnC,CAAP,EAAmD,CAACL,IAAD,CAAnD,CAAtB;AACAf,EAAAA,SAAS,CAAC,MAAM,KAAKY,QAAQ,CAACS,OAAT,CAAiBC,OAAjB,CAAyBP,IAAI,CAACI,KAA9B,EAAqCJ,IAAI,CAACK,MAA1C,CAAZ,EAA+D,CAACL,IAAD,CAA/D,CAAT;AACAX,EAAAA,QAAQ,CAAC,MAAMQ,QAAQ,CAACS,OAAT,CAAiBE,MAAjB,EAAP,EAAkC,CAAlC,CAAR;AACA,sBACE;AAAgB,IAAA,GAAG,EAAEX,QAArB;AAA+B,IAAA,IAAI,EAAE,CAACE,EAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAY,IAAA,WAAW,EAAC,QAAxB;AAAiC,IAAA,KAAK,EAAED,KAAxC;AAA+C,IAAA,MAAM,EAAEG,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAU,IAAA,WAAW,EAAC,QAAtB;AAA+B,IAAA,IAAI,EAAE,CAACH,KAAD,EAAQG,MAAR,CAArC;AAAsD,IAAA,YAAY,EAAE,GAApE;AAAyE,IAAA,WAAW,EAAE,IAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAiB,IAAA,WAAW,EAAC,QAA7B;AAAsC,IAAA,IAAI,EAAE,CAACC,MAAD,EAAS,CAAT,EAAY,CAAZ,EAAe,KAAf,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AACE,IAAA,WAAW,EAAC,QADd;AAEE,IAAA,IAAI,EAAE,CAACP,UAAD,CAFR;AAGE,0CAAoC,CAAC,IAAIK,IAAI,CAACI,KAAV,EAAiB,IAAIJ,IAAI,CAACK,MAA1B,CAHtC;AAIE,IAAA,cAAc,MAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAaD","sourcesContent":["import * as THREE from 'three'\nimport React, { useRef, useEffect, useMemo } from 'react'\nimport { extend, useThree, useFrame } from 'react-three-fiber'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport { SSAOPass } from 'three/examples/jsm/postprocessing/SSAOPass'\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass'\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader'\n\nextend({ EffectComposer, ShaderPass, RenderPass, SSAOPass, UnrealBloomPass })\n\nexport default function Effects() {\n  const composer = useRef()\n  const { scene, gl, size, camera } = useThree()\n  const aspect = useMemo(() => new THREE.Vector2(size.width, size.height), [size])\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size])\n  useFrame(() => composer.current.render(), 2)\n  return (\n    <effectComposer ref={composer} args={[gl]}>\n      <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\n      <sSAOPass attachArray=\"passes\" args={[scene, camera]} kernelRadius={0.6} maxDistance={0.03} />\n      <unrealBloomPass attachArray=\"passes\" args={[aspect, 2, 1, 0.991]} />\n      <shaderPass\n        attachArray=\"passes\"\n        args={[FXAAShader]}\n        material-uniforms-resolution-value={[1 / size.width, 1 / size.height]}\n        renderToScreen\n      />\n    </effectComposer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}